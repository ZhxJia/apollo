// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: conti_radar.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "conti_radar.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace drivers {

namespace {

const ::google::protobuf::Descriptor* ClusterListStatus_600_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClusterListStatus_600_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectListStatus_60A_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectListStatus_60A_reflection_ = NULL;
const ::google::protobuf::Descriptor* RadarState_201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RadarState_201_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContiRadarObs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContiRadarObs_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContiRadar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContiRadar_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_conti_5fradar_2eproto() {
  protobuf_AddDesc_conti_5fradar_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "conti_radar.proto");
  GOOGLE_CHECK(file != NULL);
  ClusterListStatus_600_descriptor_ = file->message_type(0);
  static const int ClusterListStatus_600_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterListStatus_600, near_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterListStatus_600, far_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterListStatus_600, meas_counter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterListStatus_600, interface_version_),
  };
  ClusterListStatus_600_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClusterListStatus_600_descriptor_,
      ClusterListStatus_600::default_instance_,
      ClusterListStatus_600_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterListStatus_600, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterListStatus_600, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClusterListStatus_600));
  ObjectListStatus_60A_descriptor_ = file->message_type(1);
  static const int ObjectListStatus_60A_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectListStatus_60A, nof_objects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectListStatus_60A, meas_counter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectListStatus_60A, interface_version_),
  };
  ObjectListStatus_60A_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjectListStatus_60A_descriptor_,
      ObjectListStatus_60A::default_instance_,
      ObjectListStatus_60A_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectListStatus_60A, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectListStatus_60A, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjectListStatus_60A));
  RadarState_201_descriptor_ = file->message_type(2);
  static const int RadarState_201_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarState_201, max_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarState_201, radar_power_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarState_201, output_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarState_201, rcs_threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarState_201, send_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarState_201, send_ext_info_),
  };
  RadarState_201_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RadarState_201_descriptor_,
      RadarState_201::default_instance_,
      RadarState_201_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarState_201, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarState_201, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RadarState_201));
  ContiRadarObs_descriptor_ = file->message_type(3);
  static const int ContiRadarObs_offsets_[24] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, clusterortrack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, obstacle_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, longitude_dist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, lateral_dist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, longitude_vel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, lateral_vel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, rcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, dynprop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, longitude_dist_rms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, lateral_dist_rms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, longitude_vel_rms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, lateral_vel_rms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, probexist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, meas_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, longitude_accel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, lateral_accel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, oritation_angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, longitude_accel_rms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, lateral_accel_rms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, oritation_angle_rms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, obstacle_class_),
  };
  ContiRadarObs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContiRadarObs_descriptor_,
      ContiRadarObs::default_instance_,
      ContiRadarObs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadarObs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContiRadarObs));
  ContiRadar_descriptor_ = file->message_type(4);
  static const int ContiRadar_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadar, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadar, contiobs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadar, radar_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadar, cluster_list_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadar, object_list_status_),
  };
  ContiRadar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContiRadar_descriptor_,
      ContiRadar::default_instance_,
      ContiRadar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContiRadar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContiRadar));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_conti_5fradar_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClusterListStatus_600_descriptor_, &ClusterListStatus_600::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjectListStatus_60A_descriptor_, &ObjectListStatus_60A::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RadarState_201_descriptor_, &RadarState_201::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContiRadarObs_descriptor_, &ContiRadarObs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContiRadar_descriptor_, &ContiRadar::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_conti_5fradar_2eproto() {
  delete ClusterListStatus_600::default_instance_;
  delete ClusterListStatus_600_reflection_;
  delete ObjectListStatus_60A::default_instance_;
  delete ObjectListStatus_60A_reflection_;
  delete RadarState_201::default_instance_;
  delete RadarState_201_reflection_;
  delete ContiRadarObs::default_instance_;
  delete ContiRadarObs_reflection_;
  delete ContiRadar::default_instance_;
  delete ContiRadar_reflection_;
}

void protobuf_AddDesc_conti_5fradar_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::common::protobuf_AddDesc_modules_2fcommon_2fproto_2fheader_2eproto();
  ::apollo::drivers::conti_radar::protobuf_AddDesc_modules_2fdrivers_2fradar_2fconti_5fradar_2fproto_2fconti_5fradar_5fconf_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021conti_radar.proto\022\016apollo.drivers\032!mod"
    "ules/common/proto/header.proto\032>modules/"
    "drivers/radar/conti_radar/proto/conti_ra"
    "dar_conf.proto\"m\n\025ClusterListStatus_600\022"
    "\017\n\004near\030\001 \001(\005:\0010\022\016\n\003far\030\002 \001(\005:\0010\022\030\n\014meas"
    "_counter\030\003 \001(\005:\002-1\022\031\n\021interface_version\030"
    "\004 \001(\005\"c\n\024ObjectListStatus_60A\022\026\n\013nof_obj"
    "ects\030\001 \001(\005:\0010\022\030\n\014meas_counter\030\002 \001(\005:\002-1\022"
    "\031\n\021interface_version\030\003 \001(\005\"\346\001\n\016RadarStat"
    "e_201\022\024\n\014max_distance\030\001 \001(\r\022\023\n\013radar_pow"
    "er\030\002 \001(\r\022;\n\013output_type\030\003 \001(\0162&.apollo.d"
    "rivers.conti_radar.OutputType\022\?\n\rrcs_thr"
    "eshold\030\004 \001(\0162(.apollo.drivers.conti_rada"
    "r.RcsThreshold\022\024\n\014send_quality\030\005 \001(\010\022\025\n\r"
    "send_ext_info\030\006 \001(\010\"\301\004\n\rContiRadarObs\022%\n"
    "\006header\030\001 \001(\0132\025.apollo.common.Header\022\026\n\016"
    "clusterortrack\030\002 \001(\010\022\023\n\013obstacle_id\030\003 \001("
    "\005\022\026\n\016longitude_dist\030\004 \001(\001\022\024\n\014lateral_dis"
    "t\030\005 \001(\001\022\025\n\rlongitude_vel\030\006 \001(\001\022\023\n\013latera"
    "l_vel\030\007 \001(\001\022\013\n\003rcs\030\010 \001(\001\022\017\n\007dynprop\030\t \001("
    "\005\022\032\n\022longitude_dist_rms\030\n \001(\001\022\030\n\020lateral"
    "_dist_rms\030\013 \001(\001\022\031\n\021longitude_vel_rms\030\014 \001"
    "(\001\022\027\n\017lateral_vel_rms\030\r \001(\001\022\021\n\tprobexist"
    "\030\016 \001(\001\022\022\n\nmeas_state\030\017 \001(\005\022\027\n\017longitude_"
    "accel\030\020 \001(\001\022\025\n\rlateral_accel\030\021 \001(\001\022\027\n\017or"
    "itation_angle\030\022 \001(\001\022\033\n\023longitude_accel_r"
    "ms\030\023 \001(\001\022\031\n\021lateral_accel_rms\030\024 \001(\001\022\033\n\023o"
    "ritation_angle_rms\030\025 \001(\001\022\016\n\006length\030\026 \001(\001"
    "\022\r\n\005width\030\027 \001(\001\022\026\n\016obstacle_class\030\030 \001(\005\""
    "\237\002\n\nContiRadar\022%\n\006header\030\001 \001(\0132\025.apollo."
    "common.Header\022/\n\010contiobs\030\002 \003(\0132\035.apollo"
    ".drivers.ContiRadarObs\0223\n\013radar_state\030\003 "
    "\001(\0132\036.apollo.drivers.RadarState_201\022B\n\023c"
    "luster_list_status\030\004 \001(\0132%.apollo.driver"
    "s.ClusterListStatus_600\022@\n\022object_list_s"
    "tatus\030\005 \001(\0132$.apollo.drivers.ObjectListS"
    "tatus_60A", 1449);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "conti_radar.proto", &protobuf_RegisterTypes);
  ClusterListStatus_600::default_instance_ = new ClusterListStatus_600();
  ObjectListStatus_60A::default_instance_ = new ObjectListStatus_60A();
  RadarState_201::default_instance_ = new RadarState_201();
  ContiRadarObs::default_instance_ = new ContiRadarObs();
  ContiRadar::default_instance_ = new ContiRadar();
  ClusterListStatus_600::default_instance_->InitAsDefaultInstance();
  ObjectListStatus_60A::default_instance_->InitAsDefaultInstance();
  RadarState_201::default_instance_->InitAsDefaultInstance();
  ContiRadarObs::default_instance_->InitAsDefaultInstance();
  ContiRadar::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_conti_5fradar_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_conti_5fradar_2eproto {
  StaticDescriptorInitializer_conti_5fradar_2eproto() {
    protobuf_AddDesc_conti_5fradar_2eproto();
  }
} static_descriptor_initializer_conti_5fradar_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ClusterListStatus_600::kNearFieldNumber;
const int ClusterListStatus_600::kFarFieldNumber;
const int ClusterListStatus_600::kMeasCounterFieldNumber;
const int ClusterListStatus_600::kInterfaceVersionFieldNumber;
#endif  // !_MSC_VER

ClusterListStatus_600::ClusterListStatus_600()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.drivers.ClusterListStatus_600)
}

void ClusterListStatus_600::InitAsDefaultInstance() {
}

ClusterListStatus_600::ClusterListStatus_600(const ClusterListStatus_600& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.drivers.ClusterListStatus_600)
}

void ClusterListStatus_600::SharedCtor() {
  _cached_size_ = 0;
  near_ = 0;
  far_ = 0;
  meas_counter_ = -1;
  interface_version_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClusterListStatus_600::~ClusterListStatus_600() {
  // @@protoc_insertion_point(destructor:apollo.drivers.ClusterListStatus_600)
  SharedDtor();
}

void ClusterListStatus_600::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClusterListStatus_600::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterListStatus_600::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClusterListStatus_600_descriptor_;
}

const ClusterListStatus_600& ClusterListStatus_600::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_conti_5fradar_2eproto();
  return *default_instance_;
}

ClusterListStatus_600* ClusterListStatus_600::default_instance_ = NULL;

ClusterListStatus_600* ClusterListStatus_600::New() const {
  return new ClusterListStatus_600;
}

void ClusterListStatus_600::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ClusterListStatus_600*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(near_, far_);
    meas_counter_ = -1;
    interface_version_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClusterListStatus_600::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.drivers.ClusterListStatus_600)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 near = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &near_)));
          set_has_near();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_far;
        break;
      }

      // optional int32 far = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_far:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &far_)));
          set_has_far();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_meas_counter;
        break;
      }

      // optional int32 meas_counter = 3 [default = -1];
      case 3: {
        if (tag == 24) {
         parse_meas_counter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &meas_counter_)));
          set_has_meas_counter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_interface_version;
        break;
      }

      // optional int32 interface_version = 4;
      case 4: {
        if (tag == 32) {
         parse_interface_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interface_version_)));
          set_has_interface_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.drivers.ClusterListStatus_600)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.drivers.ClusterListStatus_600)
  return false;
#undef DO_
}

void ClusterListStatus_600::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.drivers.ClusterListStatus_600)
  // optional int32 near = 1 [default = 0];
  if (has_near()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->near(), output);
  }

  // optional int32 far = 2 [default = 0];
  if (has_far()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->far(), output);
  }

  // optional int32 meas_counter = 3 [default = -1];
  if (has_meas_counter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->meas_counter(), output);
  }

  // optional int32 interface_version = 4;
  if (has_interface_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->interface_version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.drivers.ClusterListStatus_600)
}

::google::protobuf::uint8* ClusterListStatus_600::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.drivers.ClusterListStatus_600)
  // optional int32 near = 1 [default = 0];
  if (has_near()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->near(), target);
  }

  // optional int32 far = 2 [default = 0];
  if (has_far()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->far(), target);
  }

  // optional int32 meas_counter = 3 [default = -1];
  if (has_meas_counter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->meas_counter(), target);
  }

  // optional int32 interface_version = 4;
  if (has_interface_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->interface_version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.drivers.ClusterListStatus_600)
  return target;
}

int ClusterListStatus_600::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 near = 1 [default = 0];
    if (has_near()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->near());
    }

    // optional int32 far = 2 [default = 0];
    if (has_far()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->far());
    }

    // optional int32 meas_counter = 3 [default = -1];
    if (has_meas_counter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->meas_counter());
    }

    // optional int32 interface_version = 4;
    if (has_interface_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->interface_version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterListStatus_600::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClusterListStatus_600* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClusterListStatus_600*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClusterListStatus_600::MergeFrom(const ClusterListStatus_600& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_near()) {
      set_near(from.near());
    }
    if (from.has_far()) {
      set_far(from.far());
    }
    if (from.has_meas_counter()) {
      set_meas_counter(from.meas_counter());
    }
    if (from.has_interface_version()) {
      set_interface_version(from.interface_version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClusterListStatus_600::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterListStatus_600::CopyFrom(const ClusterListStatus_600& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterListStatus_600::IsInitialized() const {

  return true;
}

void ClusterListStatus_600::Swap(ClusterListStatus_600* other) {
  if (other != this) {
    std::swap(near_, other->near_);
    std::swap(far_, other->far_);
    std::swap(meas_counter_, other->meas_counter_);
    std::swap(interface_version_, other->interface_version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClusterListStatus_600::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClusterListStatus_600_descriptor_;
  metadata.reflection = ClusterListStatus_600_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjectListStatus_60A::kNofObjectsFieldNumber;
const int ObjectListStatus_60A::kMeasCounterFieldNumber;
const int ObjectListStatus_60A::kInterfaceVersionFieldNumber;
#endif  // !_MSC_VER

ObjectListStatus_60A::ObjectListStatus_60A()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.drivers.ObjectListStatus_60A)
}

void ObjectListStatus_60A::InitAsDefaultInstance() {
}

ObjectListStatus_60A::ObjectListStatus_60A(const ObjectListStatus_60A& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.drivers.ObjectListStatus_60A)
}

void ObjectListStatus_60A::SharedCtor() {
  _cached_size_ = 0;
  nof_objects_ = 0;
  meas_counter_ = -1;
  interface_version_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectListStatus_60A::~ObjectListStatus_60A() {
  // @@protoc_insertion_point(destructor:apollo.drivers.ObjectListStatus_60A)
  SharedDtor();
}

void ObjectListStatus_60A::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ObjectListStatus_60A::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectListStatus_60A::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectListStatus_60A_descriptor_;
}

const ObjectListStatus_60A& ObjectListStatus_60A::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_conti_5fradar_2eproto();
  return *default_instance_;
}

ObjectListStatus_60A* ObjectListStatus_60A::default_instance_ = NULL;

ObjectListStatus_60A* ObjectListStatus_60A::New() const {
  return new ObjectListStatus_60A;
}

void ObjectListStatus_60A::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    nof_objects_ = 0;
    meas_counter_ = -1;
    interface_version_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjectListStatus_60A::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.drivers.ObjectListStatus_60A)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 nof_objects = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nof_objects_)));
          set_has_nof_objects();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_meas_counter;
        break;
      }

      // optional int32 meas_counter = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_meas_counter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &meas_counter_)));
          set_has_meas_counter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_interface_version;
        break;
      }

      // optional int32 interface_version = 3;
      case 3: {
        if (tag == 24) {
         parse_interface_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interface_version_)));
          set_has_interface_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.drivers.ObjectListStatus_60A)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.drivers.ObjectListStatus_60A)
  return false;
#undef DO_
}

void ObjectListStatus_60A::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.drivers.ObjectListStatus_60A)
  // optional int32 nof_objects = 1 [default = 0];
  if (has_nof_objects()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nof_objects(), output);
  }

  // optional int32 meas_counter = 2 [default = -1];
  if (has_meas_counter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->meas_counter(), output);
  }

  // optional int32 interface_version = 3;
  if (has_interface_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->interface_version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.drivers.ObjectListStatus_60A)
}

::google::protobuf::uint8* ObjectListStatus_60A::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.drivers.ObjectListStatus_60A)
  // optional int32 nof_objects = 1 [default = 0];
  if (has_nof_objects()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nof_objects(), target);
  }

  // optional int32 meas_counter = 2 [default = -1];
  if (has_meas_counter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->meas_counter(), target);
  }

  // optional int32 interface_version = 3;
  if (has_interface_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->interface_version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.drivers.ObjectListStatus_60A)
  return target;
}

int ObjectListStatus_60A::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 nof_objects = 1 [default = 0];
    if (has_nof_objects()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nof_objects());
    }

    // optional int32 meas_counter = 2 [default = -1];
    if (has_meas_counter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->meas_counter());
    }

    // optional int32 interface_version = 3;
    if (has_interface_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->interface_version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectListStatus_60A::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjectListStatus_60A* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjectListStatus_60A*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjectListStatus_60A::MergeFrom(const ObjectListStatus_60A& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nof_objects()) {
      set_nof_objects(from.nof_objects());
    }
    if (from.has_meas_counter()) {
      set_meas_counter(from.meas_counter());
    }
    if (from.has_interface_version()) {
      set_interface_version(from.interface_version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjectListStatus_60A::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectListStatus_60A::CopyFrom(const ObjectListStatus_60A& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectListStatus_60A::IsInitialized() const {

  return true;
}

void ObjectListStatus_60A::Swap(ObjectListStatus_60A* other) {
  if (other != this) {
    std::swap(nof_objects_, other->nof_objects_);
    std::swap(meas_counter_, other->meas_counter_);
    std::swap(interface_version_, other->interface_version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjectListStatus_60A::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectListStatus_60A_descriptor_;
  metadata.reflection = ObjectListStatus_60A_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RadarState_201::kMaxDistanceFieldNumber;
const int RadarState_201::kRadarPowerFieldNumber;
const int RadarState_201::kOutputTypeFieldNumber;
const int RadarState_201::kRcsThresholdFieldNumber;
const int RadarState_201::kSendQualityFieldNumber;
const int RadarState_201::kSendExtInfoFieldNumber;
#endif  // !_MSC_VER

RadarState_201::RadarState_201()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.drivers.RadarState_201)
}

void RadarState_201::InitAsDefaultInstance() {
}

RadarState_201::RadarState_201(const RadarState_201& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.drivers.RadarState_201)
}

void RadarState_201::SharedCtor() {
  _cached_size_ = 0;
  max_distance_ = 0u;
  radar_power_ = 0u;
  output_type_ = 0;
  rcs_threshold_ = 0;
  send_quality_ = false;
  send_ext_info_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RadarState_201::~RadarState_201() {
  // @@protoc_insertion_point(destructor:apollo.drivers.RadarState_201)
  SharedDtor();
}

void RadarState_201::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RadarState_201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarState_201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RadarState_201_descriptor_;
}

const RadarState_201& RadarState_201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_conti_5fradar_2eproto();
  return *default_instance_;
}

RadarState_201* RadarState_201::default_instance_ = NULL;

RadarState_201* RadarState_201::New() const {
  return new RadarState_201;
}

void RadarState_201::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RadarState_201*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(max_distance_, send_ext_info_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RadarState_201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.drivers.RadarState_201)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 max_distance = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_distance_)));
          set_has_max_distance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_radar_power;
        break;
      }

      // optional uint32 radar_power = 2;
      case 2: {
        if (tag == 16) {
         parse_radar_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &radar_power_)));
          set_has_radar_power();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_output_type;
        break;
      }

      // optional .apollo.drivers.conti_radar.OutputType output_type = 3;
      case 3: {
        if (tag == 24) {
         parse_output_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::drivers::conti_radar::OutputType_IsValid(value)) {
            set_output_type(static_cast< ::apollo::drivers::conti_radar::OutputType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_rcs_threshold;
        break;
      }

      // optional .apollo.drivers.conti_radar.RcsThreshold rcs_threshold = 4;
      case 4: {
        if (tag == 32) {
         parse_rcs_threshold:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::drivers::conti_radar::RcsThreshold_IsValid(value)) {
            set_rcs_threshold(static_cast< ::apollo::drivers::conti_radar::RcsThreshold >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_send_quality;
        break;
      }

      // optional bool send_quality = 5;
      case 5: {
        if (tag == 40) {
         parse_send_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &send_quality_)));
          set_has_send_quality();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_send_ext_info;
        break;
      }

      // optional bool send_ext_info = 6;
      case 6: {
        if (tag == 48) {
         parse_send_ext_info:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &send_ext_info_)));
          set_has_send_ext_info();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.drivers.RadarState_201)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.drivers.RadarState_201)
  return false;
#undef DO_
}

void RadarState_201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.drivers.RadarState_201)
  // optional uint32 max_distance = 1;
  if (has_max_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->max_distance(), output);
  }

  // optional uint32 radar_power = 2;
  if (has_radar_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->radar_power(), output);
  }

  // optional .apollo.drivers.conti_radar.OutputType output_type = 3;
  if (has_output_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->output_type(), output);
  }

  // optional .apollo.drivers.conti_radar.RcsThreshold rcs_threshold = 4;
  if (has_rcs_threshold()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->rcs_threshold(), output);
  }

  // optional bool send_quality = 5;
  if (has_send_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->send_quality(), output);
  }

  // optional bool send_ext_info = 6;
  if (has_send_ext_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->send_ext_info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.drivers.RadarState_201)
}

::google::protobuf::uint8* RadarState_201::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.drivers.RadarState_201)
  // optional uint32 max_distance = 1;
  if (has_max_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->max_distance(), target);
  }

  // optional uint32 radar_power = 2;
  if (has_radar_power()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->radar_power(), target);
  }

  // optional .apollo.drivers.conti_radar.OutputType output_type = 3;
  if (has_output_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->output_type(), target);
  }

  // optional .apollo.drivers.conti_radar.RcsThreshold rcs_threshold = 4;
  if (has_rcs_threshold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->rcs_threshold(), target);
  }

  // optional bool send_quality = 5;
  if (has_send_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->send_quality(), target);
  }

  // optional bool send_ext_info = 6;
  if (has_send_ext_info()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->send_ext_info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.drivers.RadarState_201)
  return target;
}

int RadarState_201::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 max_distance = 1;
    if (has_max_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_distance());
    }

    // optional uint32 radar_power = 2;
    if (has_radar_power()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->radar_power());
    }

    // optional .apollo.drivers.conti_radar.OutputType output_type = 3;
    if (has_output_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->output_type());
    }

    // optional .apollo.drivers.conti_radar.RcsThreshold rcs_threshold = 4;
    if (has_rcs_threshold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->rcs_threshold());
    }

    // optional bool send_quality = 5;
    if (has_send_quality()) {
      total_size += 1 + 1;
    }

    // optional bool send_ext_info = 6;
    if (has_send_ext_info()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarState_201::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RadarState_201* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RadarState_201*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RadarState_201::MergeFrom(const RadarState_201& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_max_distance()) {
      set_max_distance(from.max_distance());
    }
    if (from.has_radar_power()) {
      set_radar_power(from.radar_power());
    }
    if (from.has_output_type()) {
      set_output_type(from.output_type());
    }
    if (from.has_rcs_threshold()) {
      set_rcs_threshold(from.rcs_threshold());
    }
    if (from.has_send_quality()) {
      set_send_quality(from.send_quality());
    }
    if (from.has_send_ext_info()) {
      set_send_ext_info(from.send_ext_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RadarState_201::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarState_201::CopyFrom(const RadarState_201& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarState_201::IsInitialized() const {

  return true;
}

void RadarState_201::Swap(RadarState_201* other) {
  if (other != this) {
    std::swap(max_distance_, other->max_distance_);
    std::swap(radar_power_, other->radar_power_);
    std::swap(output_type_, other->output_type_);
    std::swap(rcs_threshold_, other->rcs_threshold_);
    std::swap(send_quality_, other->send_quality_);
    std::swap(send_ext_info_, other->send_ext_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RadarState_201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RadarState_201_descriptor_;
  metadata.reflection = RadarState_201_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ContiRadarObs::kHeaderFieldNumber;
const int ContiRadarObs::kClusterortrackFieldNumber;
const int ContiRadarObs::kObstacleIdFieldNumber;
const int ContiRadarObs::kLongitudeDistFieldNumber;
const int ContiRadarObs::kLateralDistFieldNumber;
const int ContiRadarObs::kLongitudeVelFieldNumber;
const int ContiRadarObs::kLateralVelFieldNumber;
const int ContiRadarObs::kRcsFieldNumber;
const int ContiRadarObs::kDynpropFieldNumber;
const int ContiRadarObs::kLongitudeDistRmsFieldNumber;
const int ContiRadarObs::kLateralDistRmsFieldNumber;
const int ContiRadarObs::kLongitudeVelRmsFieldNumber;
const int ContiRadarObs::kLateralVelRmsFieldNumber;
const int ContiRadarObs::kProbexistFieldNumber;
const int ContiRadarObs::kMeasStateFieldNumber;
const int ContiRadarObs::kLongitudeAccelFieldNumber;
const int ContiRadarObs::kLateralAccelFieldNumber;
const int ContiRadarObs::kOritationAngleFieldNumber;
const int ContiRadarObs::kLongitudeAccelRmsFieldNumber;
const int ContiRadarObs::kLateralAccelRmsFieldNumber;
const int ContiRadarObs::kOritationAngleRmsFieldNumber;
const int ContiRadarObs::kLengthFieldNumber;
const int ContiRadarObs::kWidthFieldNumber;
const int ContiRadarObs::kObstacleClassFieldNumber;
#endif  // !_MSC_VER

ContiRadarObs::ContiRadarObs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.drivers.ContiRadarObs)
}

void ContiRadarObs::InitAsDefaultInstance() {
  header_ = const_cast< ::apollo::common::Header*>(&::apollo::common::Header::default_instance());
}

ContiRadarObs::ContiRadarObs(const ContiRadarObs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.drivers.ContiRadarObs)
}

void ContiRadarObs::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
  clusterortrack_ = false;
  obstacle_id_ = 0;
  longitude_dist_ = 0;
  lateral_dist_ = 0;
  longitude_vel_ = 0;
  lateral_vel_ = 0;
  rcs_ = 0;
  dynprop_ = 0;
  longitude_dist_rms_ = 0;
  lateral_dist_rms_ = 0;
  longitude_vel_rms_ = 0;
  lateral_vel_rms_ = 0;
  probexist_ = 0;
  meas_state_ = 0;
  longitude_accel_ = 0;
  lateral_accel_ = 0;
  oritation_angle_ = 0;
  longitude_accel_rms_ = 0;
  lateral_accel_rms_ = 0;
  oritation_angle_rms_ = 0;
  length_ = 0;
  width_ = 0;
  obstacle_class_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContiRadarObs::~ContiRadarObs() {
  // @@protoc_insertion_point(destructor:apollo.drivers.ContiRadarObs)
  SharedDtor();
}

void ContiRadarObs::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void ContiRadarObs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContiRadarObs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContiRadarObs_descriptor_;
}

const ContiRadarObs& ContiRadarObs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_conti_5fradar_2eproto();
  return *default_instance_;
}

ContiRadarObs* ContiRadarObs::default_instance_ = NULL;

ContiRadarObs* ContiRadarObs::New() const {
  return new ContiRadarObs;
}

void ContiRadarObs::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ContiRadarObs*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(clusterortrack_, rcs_);
    if (has_header()) {
      if (header_ != NULL) header_->::apollo::common::Header::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(longitude_dist_rms_, longitude_accel_);
  }
  if (_has_bits_[16 / 32] & 16711680) {
    ZR_(lateral_accel_, obstacle_class_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContiRadarObs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.drivers.ContiRadarObs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.Header header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_clusterortrack;
        break;
      }

      // optional bool clusterortrack = 2;
      case 2: {
        if (tag == 16) {
         parse_clusterortrack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clusterortrack_)));
          set_has_clusterortrack();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_obstacle_id;
        break;
      }

      // optional int32 obstacle_id = 3;
      case 3: {
        if (tag == 24) {
         parse_obstacle_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obstacle_id_)));
          set_has_obstacle_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_longitude_dist;
        break;
      }

      // optional double longitude_dist = 4;
      case 4: {
        if (tag == 33) {
         parse_longitude_dist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_dist_)));
          set_has_longitude_dist();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_lateral_dist;
        break;
      }

      // optional double lateral_dist = 5;
      case 5: {
        if (tag == 41) {
         parse_lateral_dist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lateral_dist_)));
          set_has_lateral_dist();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_longitude_vel;
        break;
      }

      // optional double longitude_vel = 6;
      case 6: {
        if (tag == 49) {
         parse_longitude_vel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_vel_)));
          set_has_longitude_vel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_lateral_vel;
        break;
      }

      // optional double lateral_vel = 7;
      case 7: {
        if (tag == 57) {
         parse_lateral_vel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lateral_vel_)));
          set_has_lateral_vel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_rcs;
        break;
      }

      // optional double rcs = 8;
      case 8: {
        if (tag == 65) {
         parse_rcs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rcs_)));
          set_has_rcs();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_dynprop;
        break;
      }

      // optional int32 dynprop = 9;
      case 9: {
        if (tag == 72) {
         parse_dynprop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dynprop_)));
          set_has_dynprop();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_longitude_dist_rms;
        break;
      }

      // optional double longitude_dist_rms = 10;
      case 10: {
        if (tag == 81) {
         parse_longitude_dist_rms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_dist_rms_)));
          set_has_longitude_dist_rms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_lateral_dist_rms;
        break;
      }

      // optional double lateral_dist_rms = 11;
      case 11: {
        if (tag == 89) {
         parse_lateral_dist_rms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lateral_dist_rms_)));
          set_has_lateral_dist_rms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_longitude_vel_rms;
        break;
      }

      // optional double longitude_vel_rms = 12;
      case 12: {
        if (tag == 97) {
         parse_longitude_vel_rms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_vel_rms_)));
          set_has_longitude_vel_rms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_lateral_vel_rms;
        break;
      }

      // optional double lateral_vel_rms = 13;
      case 13: {
        if (tag == 105) {
         parse_lateral_vel_rms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lateral_vel_rms_)));
          set_has_lateral_vel_rms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_probexist;
        break;
      }

      // optional double probexist = 14;
      case 14: {
        if (tag == 113) {
         parse_probexist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probexist_)));
          set_has_probexist();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_meas_state;
        break;
      }

      // optional int32 meas_state = 15;
      case 15: {
        if (tag == 120) {
         parse_meas_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &meas_state_)));
          set_has_meas_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_longitude_accel;
        break;
      }

      // optional double longitude_accel = 16;
      case 16: {
        if (tag == 129) {
         parse_longitude_accel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_accel_)));
          set_has_longitude_accel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_lateral_accel;
        break;
      }

      // optional double lateral_accel = 17;
      case 17: {
        if (tag == 137) {
         parse_lateral_accel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lateral_accel_)));
          set_has_lateral_accel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_oritation_angle;
        break;
      }

      // optional double oritation_angle = 18;
      case 18: {
        if (tag == 145) {
         parse_oritation_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &oritation_angle_)));
          set_has_oritation_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(153)) goto parse_longitude_accel_rms;
        break;
      }

      // optional double longitude_accel_rms = 19;
      case 19: {
        if (tag == 153) {
         parse_longitude_accel_rms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_accel_rms_)));
          set_has_longitude_accel_rms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_lateral_accel_rms;
        break;
      }

      // optional double lateral_accel_rms = 20;
      case 20: {
        if (tag == 161) {
         parse_lateral_accel_rms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lateral_accel_rms_)));
          set_has_lateral_accel_rms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_oritation_angle_rms;
        break;
      }

      // optional double oritation_angle_rms = 21;
      case 21: {
        if (tag == 169) {
         parse_oritation_angle_rms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &oritation_angle_rms_)));
          set_has_oritation_angle_rms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_length;
        break;
      }

      // optional double length = 22;
      case 22: {
        if (tag == 177) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
          set_has_length();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_width;
        break;
      }

      // optional double width = 23;
      case 23: {
        if (tag == 185) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_obstacle_class;
        break;
      }

      // optional int32 obstacle_class = 24;
      case 24: {
        if (tag == 192) {
         parse_obstacle_class:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obstacle_class_)));
          set_has_obstacle_class();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.drivers.ContiRadarObs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.drivers.ContiRadarObs)
  return false;
#undef DO_
}

void ContiRadarObs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.drivers.ContiRadarObs)
  // optional .apollo.common.Header header = 1;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->header(), output);
  }

  // optional bool clusterortrack = 2;
  if (has_clusterortrack()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->clusterortrack(), output);
  }

  // optional int32 obstacle_id = 3;
  if (has_obstacle_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->obstacle_id(), output);
  }

  // optional double longitude_dist = 4;
  if (has_longitude_dist()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->longitude_dist(), output);
  }

  // optional double lateral_dist = 5;
  if (has_lateral_dist()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lateral_dist(), output);
  }

  // optional double longitude_vel = 6;
  if (has_longitude_vel()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->longitude_vel(), output);
  }

  // optional double lateral_vel = 7;
  if (has_lateral_vel()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->lateral_vel(), output);
  }

  // optional double rcs = 8;
  if (has_rcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->rcs(), output);
  }

  // optional int32 dynprop = 9;
  if (has_dynprop()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->dynprop(), output);
  }

  // optional double longitude_dist_rms = 10;
  if (has_longitude_dist_rms()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->longitude_dist_rms(), output);
  }

  // optional double lateral_dist_rms = 11;
  if (has_lateral_dist_rms()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->lateral_dist_rms(), output);
  }

  // optional double longitude_vel_rms = 12;
  if (has_longitude_vel_rms()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->longitude_vel_rms(), output);
  }

  // optional double lateral_vel_rms = 13;
  if (has_lateral_vel_rms()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->lateral_vel_rms(), output);
  }

  // optional double probexist = 14;
  if (has_probexist()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->probexist(), output);
  }

  // optional int32 meas_state = 15;
  if (has_meas_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->meas_state(), output);
  }

  // optional double longitude_accel = 16;
  if (has_longitude_accel()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->longitude_accel(), output);
  }

  // optional double lateral_accel = 17;
  if (has_lateral_accel()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->lateral_accel(), output);
  }

  // optional double oritation_angle = 18;
  if (has_oritation_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->oritation_angle(), output);
  }

  // optional double longitude_accel_rms = 19;
  if (has_longitude_accel_rms()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->longitude_accel_rms(), output);
  }

  // optional double lateral_accel_rms = 20;
  if (has_lateral_accel_rms()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->lateral_accel_rms(), output);
  }

  // optional double oritation_angle_rms = 21;
  if (has_oritation_angle_rms()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->oritation_angle_rms(), output);
  }

  // optional double length = 22;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->length(), output);
  }

  // optional double width = 23;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->width(), output);
  }

  // optional int32 obstacle_class = 24;
  if (has_obstacle_class()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->obstacle_class(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.drivers.ContiRadarObs)
}

::google::protobuf::uint8* ContiRadarObs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.drivers.ContiRadarObs)
  // optional .apollo.common.Header header = 1;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->header(), target);
  }

  // optional bool clusterortrack = 2;
  if (has_clusterortrack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->clusterortrack(), target);
  }

  // optional int32 obstacle_id = 3;
  if (has_obstacle_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->obstacle_id(), target);
  }

  // optional double longitude_dist = 4;
  if (has_longitude_dist()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->longitude_dist(), target);
  }

  // optional double lateral_dist = 5;
  if (has_lateral_dist()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lateral_dist(), target);
  }

  // optional double longitude_vel = 6;
  if (has_longitude_vel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->longitude_vel(), target);
  }

  // optional double lateral_vel = 7;
  if (has_lateral_vel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->lateral_vel(), target);
  }

  // optional double rcs = 8;
  if (has_rcs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->rcs(), target);
  }

  // optional int32 dynprop = 9;
  if (has_dynprop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->dynprop(), target);
  }

  // optional double longitude_dist_rms = 10;
  if (has_longitude_dist_rms()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->longitude_dist_rms(), target);
  }

  // optional double lateral_dist_rms = 11;
  if (has_lateral_dist_rms()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->lateral_dist_rms(), target);
  }

  // optional double longitude_vel_rms = 12;
  if (has_longitude_vel_rms()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->longitude_vel_rms(), target);
  }

  // optional double lateral_vel_rms = 13;
  if (has_lateral_vel_rms()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->lateral_vel_rms(), target);
  }

  // optional double probexist = 14;
  if (has_probexist()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->probexist(), target);
  }

  // optional int32 meas_state = 15;
  if (has_meas_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->meas_state(), target);
  }

  // optional double longitude_accel = 16;
  if (has_longitude_accel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->longitude_accel(), target);
  }

  // optional double lateral_accel = 17;
  if (has_lateral_accel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->lateral_accel(), target);
  }

  // optional double oritation_angle = 18;
  if (has_oritation_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->oritation_angle(), target);
  }

  // optional double longitude_accel_rms = 19;
  if (has_longitude_accel_rms()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->longitude_accel_rms(), target);
  }

  // optional double lateral_accel_rms = 20;
  if (has_lateral_accel_rms()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->lateral_accel_rms(), target);
  }

  // optional double oritation_angle_rms = 21;
  if (has_oritation_angle_rms()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->oritation_angle_rms(), target);
  }

  // optional double length = 22;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->length(), target);
  }

  // optional double width = 23;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->width(), target);
  }

  // optional int32 obstacle_class = 24;
  if (has_obstacle_class()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->obstacle_class(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.drivers.ContiRadarObs)
  return target;
}

int ContiRadarObs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .apollo.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->header());
    }

    // optional bool clusterortrack = 2;
    if (has_clusterortrack()) {
      total_size += 1 + 1;
    }

    // optional int32 obstacle_id = 3;
    if (has_obstacle_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->obstacle_id());
    }

    // optional double longitude_dist = 4;
    if (has_longitude_dist()) {
      total_size += 1 + 8;
    }

    // optional double lateral_dist = 5;
    if (has_lateral_dist()) {
      total_size += 1 + 8;
    }

    // optional double longitude_vel = 6;
    if (has_longitude_vel()) {
      total_size += 1 + 8;
    }

    // optional double lateral_vel = 7;
    if (has_lateral_vel()) {
      total_size += 1 + 8;
    }

    // optional double rcs = 8;
    if (has_rcs()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 dynprop = 9;
    if (has_dynprop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dynprop());
    }

    // optional double longitude_dist_rms = 10;
    if (has_longitude_dist_rms()) {
      total_size += 1 + 8;
    }

    // optional double lateral_dist_rms = 11;
    if (has_lateral_dist_rms()) {
      total_size += 1 + 8;
    }

    // optional double longitude_vel_rms = 12;
    if (has_longitude_vel_rms()) {
      total_size += 1 + 8;
    }

    // optional double lateral_vel_rms = 13;
    if (has_lateral_vel_rms()) {
      total_size += 1 + 8;
    }

    // optional double probexist = 14;
    if (has_probexist()) {
      total_size += 1 + 8;
    }

    // optional int32 meas_state = 15;
    if (has_meas_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->meas_state());
    }

    // optional double longitude_accel = 16;
    if (has_longitude_accel()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional double lateral_accel = 17;
    if (has_lateral_accel()) {
      total_size += 2 + 8;
    }

    // optional double oritation_angle = 18;
    if (has_oritation_angle()) {
      total_size += 2 + 8;
    }

    // optional double longitude_accel_rms = 19;
    if (has_longitude_accel_rms()) {
      total_size += 2 + 8;
    }

    // optional double lateral_accel_rms = 20;
    if (has_lateral_accel_rms()) {
      total_size += 2 + 8;
    }

    // optional double oritation_angle_rms = 21;
    if (has_oritation_angle_rms()) {
      total_size += 2 + 8;
    }

    // optional double length = 22;
    if (has_length()) {
      total_size += 2 + 8;
    }

    // optional double width = 23;
    if (has_width()) {
      total_size += 2 + 8;
    }

    // optional int32 obstacle_class = 24;
    if (has_obstacle_class()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->obstacle_class());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContiRadarObs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContiRadarObs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContiRadarObs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContiRadarObs::MergeFrom(const ContiRadarObs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_header()) {
      mutable_header()->::apollo::common::Header::MergeFrom(from.header());
    }
    if (from.has_clusterortrack()) {
      set_clusterortrack(from.clusterortrack());
    }
    if (from.has_obstacle_id()) {
      set_obstacle_id(from.obstacle_id());
    }
    if (from.has_longitude_dist()) {
      set_longitude_dist(from.longitude_dist());
    }
    if (from.has_lateral_dist()) {
      set_lateral_dist(from.lateral_dist());
    }
    if (from.has_longitude_vel()) {
      set_longitude_vel(from.longitude_vel());
    }
    if (from.has_lateral_vel()) {
      set_lateral_vel(from.lateral_vel());
    }
    if (from.has_rcs()) {
      set_rcs(from.rcs());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dynprop()) {
      set_dynprop(from.dynprop());
    }
    if (from.has_longitude_dist_rms()) {
      set_longitude_dist_rms(from.longitude_dist_rms());
    }
    if (from.has_lateral_dist_rms()) {
      set_lateral_dist_rms(from.lateral_dist_rms());
    }
    if (from.has_longitude_vel_rms()) {
      set_longitude_vel_rms(from.longitude_vel_rms());
    }
    if (from.has_lateral_vel_rms()) {
      set_lateral_vel_rms(from.lateral_vel_rms());
    }
    if (from.has_probexist()) {
      set_probexist(from.probexist());
    }
    if (from.has_meas_state()) {
      set_meas_state(from.meas_state());
    }
    if (from.has_longitude_accel()) {
      set_longitude_accel(from.longitude_accel());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_lateral_accel()) {
      set_lateral_accel(from.lateral_accel());
    }
    if (from.has_oritation_angle()) {
      set_oritation_angle(from.oritation_angle());
    }
    if (from.has_longitude_accel_rms()) {
      set_longitude_accel_rms(from.longitude_accel_rms());
    }
    if (from.has_lateral_accel_rms()) {
      set_lateral_accel_rms(from.lateral_accel_rms());
    }
    if (from.has_oritation_angle_rms()) {
      set_oritation_angle_rms(from.oritation_angle_rms());
    }
    if (from.has_length()) {
      set_length(from.length());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_obstacle_class()) {
      set_obstacle_class(from.obstacle_class());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContiRadarObs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContiRadarObs::CopyFrom(const ContiRadarObs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContiRadarObs::IsInitialized() const {

  return true;
}

void ContiRadarObs::Swap(ContiRadarObs* other) {
  if (other != this) {
    std::swap(header_, other->header_);
    std::swap(clusterortrack_, other->clusterortrack_);
    std::swap(obstacle_id_, other->obstacle_id_);
    std::swap(longitude_dist_, other->longitude_dist_);
    std::swap(lateral_dist_, other->lateral_dist_);
    std::swap(longitude_vel_, other->longitude_vel_);
    std::swap(lateral_vel_, other->lateral_vel_);
    std::swap(rcs_, other->rcs_);
    std::swap(dynprop_, other->dynprop_);
    std::swap(longitude_dist_rms_, other->longitude_dist_rms_);
    std::swap(lateral_dist_rms_, other->lateral_dist_rms_);
    std::swap(longitude_vel_rms_, other->longitude_vel_rms_);
    std::swap(lateral_vel_rms_, other->lateral_vel_rms_);
    std::swap(probexist_, other->probexist_);
    std::swap(meas_state_, other->meas_state_);
    std::swap(longitude_accel_, other->longitude_accel_);
    std::swap(lateral_accel_, other->lateral_accel_);
    std::swap(oritation_angle_, other->oritation_angle_);
    std::swap(longitude_accel_rms_, other->longitude_accel_rms_);
    std::swap(lateral_accel_rms_, other->lateral_accel_rms_);
    std::swap(oritation_angle_rms_, other->oritation_angle_rms_);
    std::swap(length_, other->length_);
    std::swap(width_, other->width_);
    std::swap(obstacle_class_, other->obstacle_class_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ContiRadarObs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContiRadarObs_descriptor_;
  metadata.reflection = ContiRadarObs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ContiRadar::kHeaderFieldNumber;
const int ContiRadar::kContiobsFieldNumber;
const int ContiRadar::kRadarStateFieldNumber;
const int ContiRadar::kClusterListStatusFieldNumber;
const int ContiRadar::kObjectListStatusFieldNumber;
#endif  // !_MSC_VER

ContiRadar::ContiRadar()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.drivers.ContiRadar)
}

void ContiRadar::InitAsDefaultInstance() {
  header_ = const_cast< ::apollo::common::Header*>(&::apollo::common::Header::default_instance());
  radar_state_ = const_cast< ::apollo::drivers::RadarState_201*>(&::apollo::drivers::RadarState_201::default_instance());
  cluster_list_status_ = const_cast< ::apollo::drivers::ClusterListStatus_600*>(&::apollo::drivers::ClusterListStatus_600::default_instance());
  object_list_status_ = const_cast< ::apollo::drivers::ObjectListStatus_60A*>(&::apollo::drivers::ObjectListStatus_60A::default_instance());
}

ContiRadar::ContiRadar(const ContiRadar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.drivers.ContiRadar)
}

void ContiRadar::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
  radar_state_ = NULL;
  cluster_list_status_ = NULL;
  object_list_status_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContiRadar::~ContiRadar() {
  // @@protoc_insertion_point(destructor:apollo.drivers.ContiRadar)
  SharedDtor();
}

void ContiRadar::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
    delete radar_state_;
    delete cluster_list_status_;
    delete object_list_status_;
  }
}

void ContiRadar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContiRadar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContiRadar_descriptor_;
}

const ContiRadar& ContiRadar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_conti_5fradar_2eproto();
  return *default_instance_;
}

ContiRadar* ContiRadar::default_instance_ = NULL;

ContiRadar* ContiRadar::New() const {
  return new ContiRadar;
}

void ContiRadar::Clear() {
  if (_has_bits_[0 / 32] & 29) {
    if (has_header()) {
      if (header_ != NULL) header_->::apollo::common::Header::Clear();
    }
    if (has_radar_state()) {
      if (radar_state_ != NULL) radar_state_->::apollo::drivers::RadarState_201::Clear();
    }
    if (has_cluster_list_status()) {
      if (cluster_list_status_ != NULL) cluster_list_status_->::apollo::drivers::ClusterListStatus_600::Clear();
    }
    if (has_object_list_status()) {
      if (object_list_status_ != NULL) object_list_status_->::apollo::drivers::ObjectListStatus_60A::Clear();
    }
  }
  contiobs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContiRadar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.drivers.ContiRadar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.Header header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contiobs;
        break;
      }

      // repeated .apollo.drivers.ContiRadarObs contiobs = 2;
      case 2: {
        if (tag == 18) {
         parse_contiobs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_contiobs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_contiobs;
        if (input->ExpectTag(26)) goto parse_radar_state;
        break;
      }

      // optional .apollo.drivers.RadarState_201 radar_state = 3;
      case 3: {
        if (tag == 26) {
         parse_radar_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_radar_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_cluster_list_status;
        break;
      }

      // optional .apollo.drivers.ClusterListStatus_600 cluster_list_status = 4;
      case 4: {
        if (tag == 34) {
         parse_cluster_list_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cluster_list_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_object_list_status;
        break;
      }

      // optional .apollo.drivers.ObjectListStatus_60A object_list_status = 5;
      case 5: {
        if (tag == 42) {
         parse_object_list_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_object_list_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.drivers.ContiRadar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.drivers.ContiRadar)
  return false;
#undef DO_
}

void ContiRadar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.drivers.ContiRadar)
  // optional .apollo.common.Header header = 1;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->header(), output);
  }

  // repeated .apollo.drivers.ContiRadarObs contiobs = 2;
  for (int i = 0; i < this->contiobs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->contiobs(i), output);
  }

  // optional .apollo.drivers.RadarState_201 radar_state = 3;
  if (has_radar_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->radar_state(), output);
  }

  // optional .apollo.drivers.ClusterListStatus_600 cluster_list_status = 4;
  if (has_cluster_list_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->cluster_list_status(), output);
  }

  // optional .apollo.drivers.ObjectListStatus_60A object_list_status = 5;
  if (has_object_list_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->object_list_status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.drivers.ContiRadar)
}

::google::protobuf::uint8* ContiRadar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.drivers.ContiRadar)
  // optional .apollo.common.Header header = 1;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->header(), target);
  }

  // repeated .apollo.drivers.ContiRadarObs contiobs = 2;
  for (int i = 0; i < this->contiobs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->contiobs(i), target);
  }

  // optional .apollo.drivers.RadarState_201 radar_state = 3;
  if (has_radar_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->radar_state(), target);
  }

  // optional .apollo.drivers.ClusterListStatus_600 cluster_list_status = 4;
  if (has_cluster_list_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->cluster_list_status(), target);
  }

  // optional .apollo.drivers.ObjectListStatus_60A object_list_status = 5;
  if (has_object_list_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->object_list_status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.drivers.ContiRadar)
  return target;
}

int ContiRadar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .apollo.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->header());
    }

    // optional .apollo.drivers.RadarState_201 radar_state = 3;
    if (has_radar_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->radar_state());
    }

    // optional .apollo.drivers.ClusterListStatus_600 cluster_list_status = 4;
    if (has_cluster_list_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cluster_list_status());
    }

    // optional .apollo.drivers.ObjectListStatus_60A object_list_status = 5;
    if (has_object_list_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object_list_status());
    }

  }
  // repeated .apollo.drivers.ContiRadarObs contiobs = 2;
  total_size += 1 * this->contiobs_size();
  for (int i = 0; i < this->contiobs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->contiobs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContiRadar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContiRadar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContiRadar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContiRadar::MergeFrom(const ContiRadar& from) {
  GOOGLE_CHECK_NE(&from, this);
  contiobs_.MergeFrom(from.contiobs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_header()) {
      mutable_header()->::apollo::common::Header::MergeFrom(from.header());
    }
    if (from.has_radar_state()) {
      mutable_radar_state()->::apollo::drivers::RadarState_201::MergeFrom(from.radar_state());
    }
    if (from.has_cluster_list_status()) {
      mutable_cluster_list_status()->::apollo::drivers::ClusterListStatus_600::MergeFrom(from.cluster_list_status());
    }
    if (from.has_object_list_status()) {
      mutable_object_list_status()->::apollo::drivers::ObjectListStatus_60A::MergeFrom(from.object_list_status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContiRadar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContiRadar::CopyFrom(const ContiRadar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContiRadar::IsInitialized() const {

  return true;
}

void ContiRadar::Swap(ContiRadar* other) {
  if (other != this) {
    std::swap(header_, other->header_);
    contiobs_.Swap(&other->contiobs_);
    std::swap(radar_state_, other->radar_state_);
    std::swap(cluster_list_status_, other->cluster_list_status_);
    std::swap(object_list_status_, other->object_list_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ContiRadar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContiRadar_descriptor_;
  metadata.reflection = ContiRadar_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace drivers
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
