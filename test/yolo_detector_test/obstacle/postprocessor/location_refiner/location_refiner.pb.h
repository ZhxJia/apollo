// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: location_refiner.proto

#ifndef PROTOBUF_location_5frefiner_2eproto__INCLUDED
#define PROTOBUF_location_5frefiner_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace perception {
namespace camera {
namespace location_refiner {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_location_5frefiner_2eproto();
void protobuf_AssignDesc_location_5frefiner_2eproto();
void protobuf_ShutdownFile_location_5frefiner_2eproto();

class LocationRefinerParam;

// ===================================================================

class LocationRefinerParam : public ::google::protobuf::Message {
 public:
  LocationRefinerParam();
  virtual ~LocationRefinerParam();

  LocationRefinerParam(const LocationRefinerParam& from);

  inline LocationRefinerParam& operator=(const LocationRefinerParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LocationRefinerParam& default_instance();

  void Swap(LocationRefinerParam* other);

  // implements Message ----------------------------------------------

  LocationRefinerParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LocationRefinerParam& from);
  void MergeFrom(const LocationRefinerParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float min_dist_to_camera = 1 [default = 30];
  inline bool has_min_dist_to_camera() const;
  inline void clear_min_dist_to_camera();
  static const int kMinDistToCameraFieldNumber = 1;
  inline float min_dist_to_camera() const;
  inline void set_min_dist_to_camera(float value);

  // optional float roi_h2bottom_scale = 2 [default = 0.5];
  inline bool has_roi_h2bottom_scale() const;
  inline void clear_roi_h2bottom_scale();
  static const int kRoiH2BottomScaleFieldNumber = 2;
  inline float roi_h2bottom_scale() const;
  inline void set_roi_h2bottom_scale(float value);

  // @@protoc_insertion_point(class_scope:apollo.perception.camera.location_refiner.LocationRefinerParam)
 private:
  inline void set_has_min_dist_to_camera();
  inline void clear_has_min_dist_to_camera();
  inline void set_has_roi_h2bottom_scale();
  inline void clear_has_roi_h2bottom_scale();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float min_dist_to_camera_;
  float roi_h2bottom_scale_;
  friend void  protobuf_AddDesc_location_5frefiner_2eproto();
  friend void protobuf_AssignDesc_location_5frefiner_2eproto();
  friend void protobuf_ShutdownFile_location_5frefiner_2eproto();

  void InitAsDefaultInstance();
  static LocationRefinerParam* default_instance_;
};
// ===================================================================


// ===================================================================

// LocationRefinerParam

// optional float min_dist_to_camera = 1 [default = 30];
inline bool LocationRefinerParam::has_min_dist_to_camera() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocationRefinerParam::set_has_min_dist_to_camera() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LocationRefinerParam::clear_has_min_dist_to_camera() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LocationRefinerParam::clear_min_dist_to_camera() {
  min_dist_to_camera_ = 30;
  clear_has_min_dist_to_camera();
}
inline float LocationRefinerParam::min_dist_to_camera() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.location_refiner.LocationRefinerParam.min_dist_to_camera)
  return min_dist_to_camera_;
}
inline void LocationRefinerParam::set_min_dist_to_camera(float value) {
  set_has_min_dist_to_camera();
  min_dist_to_camera_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.camera.location_refiner.LocationRefinerParam.min_dist_to_camera)
}

// optional float roi_h2bottom_scale = 2 [default = 0.5];
inline bool LocationRefinerParam::has_roi_h2bottom_scale() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LocationRefinerParam::set_has_roi_h2bottom_scale() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LocationRefinerParam::clear_has_roi_h2bottom_scale() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LocationRefinerParam::clear_roi_h2bottom_scale() {
  roi_h2bottom_scale_ = 0.5f;
  clear_has_roi_h2bottom_scale();
}
inline float LocationRefinerParam::roi_h2bottom_scale() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.location_refiner.LocationRefinerParam.roi_h2bottom_scale)
  return roi_h2bottom_scale_;
}
inline void LocationRefinerParam::set_roi_h2bottom_scale(float value) {
  set_has_roi_h2bottom_scale();
  roi_h2bottom_scale_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.camera.location_refiner.LocationRefinerParam.roi_h2bottom_scale)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace location_refiner
}  // namespace camera
}  // namespace perception
}  // namespace apollo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_location_5frefiner_2eproto__INCLUDED
