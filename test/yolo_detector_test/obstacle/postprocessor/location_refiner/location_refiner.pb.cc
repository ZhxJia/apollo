// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: location_refiner.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "location_refiner.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace perception {
namespace camera {
namespace location_refiner {

namespace {

const ::google::protobuf::Descriptor* LocationRefinerParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LocationRefinerParam_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_location_5frefiner_2eproto() {
  protobuf_AddDesc_location_5frefiner_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "location_refiner.proto");
  GOOGLE_CHECK(file != NULL);
  LocationRefinerParam_descriptor_ = file->message_type(0);
  static const int LocationRefinerParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocationRefinerParam, min_dist_to_camera_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocationRefinerParam, roi_h2bottom_scale_),
  };
  LocationRefinerParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LocationRefinerParam_descriptor_,
      LocationRefinerParam::default_instance_,
      LocationRefinerParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocationRefinerParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocationRefinerParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LocationRefinerParam));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_location_5frefiner_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LocationRefinerParam_descriptor_, &LocationRefinerParam::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_location_5frefiner_2eproto() {
  delete LocationRefinerParam::default_instance_;
  delete LocationRefinerParam_reflection_;
}

void protobuf_AddDesc_location_5frefiner_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026location_refiner.proto\022)apollo.percept"
    "ion.camera.location_refiner\"W\n\024LocationR"
    "efinerParam\022\036\n\022min_dist_to_camera\030\001 \001(\002:"
    "\00230\022\037\n\022roi_h2bottom_scale\030\002 \001(\002:\0030.5", 156);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "location_refiner.proto", &protobuf_RegisterTypes);
  LocationRefinerParam::default_instance_ = new LocationRefinerParam();
  LocationRefinerParam::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_location_5frefiner_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_location_5frefiner_2eproto {
  StaticDescriptorInitializer_location_5frefiner_2eproto() {
    protobuf_AddDesc_location_5frefiner_2eproto();
  }
} static_descriptor_initializer_location_5frefiner_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int LocationRefinerParam::kMinDistToCameraFieldNumber;
const int LocationRefinerParam::kRoiH2BottomScaleFieldNumber;
#endif  // !_MSC_VER

LocationRefinerParam::LocationRefinerParam()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.camera.location_refiner.LocationRefinerParam)
}

void LocationRefinerParam::InitAsDefaultInstance() {
}

LocationRefinerParam::LocationRefinerParam(const LocationRefinerParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.location_refiner.LocationRefinerParam)
}

void LocationRefinerParam::SharedCtor() {
  _cached_size_ = 0;
  min_dist_to_camera_ = 30;
  roi_h2bottom_scale_ = 0.5f;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LocationRefinerParam::~LocationRefinerParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.location_refiner.LocationRefinerParam)
  SharedDtor();
}

void LocationRefinerParam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LocationRefinerParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocationRefinerParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LocationRefinerParam_descriptor_;
}

const LocationRefinerParam& LocationRefinerParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_location_5frefiner_2eproto();
  return *default_instance_;
}

LocationRefinerParam* LocationRefinerParam::default_instance_ = NULL;

LocationRefinerParam* LocationRefinerParam::New() const {
  return new LocationRefinerParam;
}

void LocationRefinerParam::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    min_dist_to_camera_ = 30;
    roi_h2bottom_scale_ = 0.5f;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LocationRefinerParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.camera.location_refiner.LocationRefinerParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float min_dist_to_camera = 1 [default = 30];
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &min_dist_to_camera_)));
          set_has_min_dist_to_camera();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_roi_h2bottom_scale;
        break;
      }

      // optional float roi_h2bottom_scale = 2 [default = 0.5];
      case 2: {
        if (tag == 21) {
         parse_roi_h2bottom_scale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roi_h2bottom_scale_)));
          set_has_roi_h2bottom_scale();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.camera.location_refiner.LocationRefinerParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.camera.location_refiner.LocationRefinerParam)
  return false;
#undef DO_
}

void LocationRefinerParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.camera.location_refiner.LocationRefinerParam)
  // optional float min_dist_to_camera = 1 [default = 30];
  if (has_min_dist_to_camera()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->min_dist_to_camera(), output);
  }

  // optional float roi_h2bottom_scale = 2 [default = 0.5];
  if (has_roi_h2bottom_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->roi_h2bottom_scale(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.camera.location_refiner.LocationRefinerParam)
}

::google::protobuf::uint8* LocationRefinerParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.location_refiner.LocationRefinerParam)
  // optional float min_dist_to_camera = 1 [default = 30];
  if (has_min_dist_to_camera()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->min_dist_to_camera(), target);
  }

  // optional float roi_h2bottom_scale = 2 [default = 0.5];
  if (has_roi_h2bottom_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->roi_h2bottom_scale(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.location_refiner.LocationRefinerParam)
  return target;
}

int LocationRefinerParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional float min_dist_to_camera = 1 [default = 30];
    if (has_min_dist_to_camera()) {
      total_size += 1 + 4;
    }

    // optional float roi_h2bottom_scale = 2 [default = 0.5];
    if (has_roi_h2bottom_scale()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocationRefinerParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LocationRefinerParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LocationRefinerParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LocationRefinerParam::MergeFrom(const LocationRefinerParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_min_dist_to_camera()) {
      set_min_dist_to_camera(from.min_dist_to_camera());
    }
    if (from.has_roi_h2bottom_scale()) {
      set_roi_h2bottom_scale(from.roi_h2bottom_scale());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LocationRefinerParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationRefinerParam::CopyFrom(const LocationRefinerParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationRefinerParam::IsInitialized() const {

  return true;
}

void LocationRefinerParam::Swap(LocationRefinerParam* other) {
  if (other != this) {
    std::swap(min_dist_to_camera_, other->min_dist_to_camera_);
    std::swap(roi_h2bottom_scale_, other->roi_h2bottom_scale_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LocationRefinerParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LocationRefinerParam_descriptor_;
  metadata.reflection = LocationRefinerParam_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace location_refiner
}  // namespace camera
}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
