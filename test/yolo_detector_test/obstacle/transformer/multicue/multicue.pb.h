// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: multicue.proto

#ifndef PROTOBUF_multicue_2eproto__INCLUDED
#define PROTOBUF_multicue_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace perception {
namespace camera {
namespace multicue {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_multicue_2eproto();
void protobuf_AssignDesc_multicue_2eproto();
void protobuf_ShutdownFile_multicue_2eproto();

class MulticueParam;

// ===================================================================

class MulticueParam : public ::google::protobuf::Message {
 public:
  MulticueParam();
  virtual ~MulticueParam();

  MulticueParam(const MulticueParam& from);

  inline MulticueParam& operator=(const MulticueParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MulticueParam& default_instance();

  void Swap(MulticueParam* other);

  // implements Message ----------------------------------------------

  MulticueParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MulticueParam& from);
  void MergeFrom(const MulticueParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float min_dimension_val = 1 [default = 0.2];
  inline bool has_min_dimension_val() const;
  inline void clear_min_dimension_val();
  static const int kMinDimensionValFieldNumber = 1;
  inline float min_dimension_val() const;
  inline void set_min_dimension_val(float value);

  // optional bool check_dimension = 2 [default = true];
  inline bool has_check_dimension() const;
  inline void clear_check_dimension();
  static const int kCheckDimensionFieldNumber = 2;
  inline bool check_dimension() const;
  inline void set_check_dimension(bool value);

  // @@protoc_insertion_point(class_scope:apollo.perception.camera.multicue.MulticueParam)
 private:
  inline void set_has_min_dimension_val();
  inline void clear_has_min_dimension_val();
  inline void set_has_check_dimension();
  inline void clear_has_check_dimension();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float min_dimension_val_;
  bool check_dimension_;
  friend void  protobuf_AddDesc_multicue_2eproto();
  friend void protobuf_AssignDesc_multicue_2eproto();
  friend void protobuf_ShutdownFile_multicue_2eproto();

  void InitAsDefaultInstance();
  static MulticueParam* default_instance_;
};
// ===================================================================


// ===================================================================

// MulticueParam

// optional float min_dimension_val = 1 [default = 0.2];
inline bool MulticueParam::has_min_dimension_val() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MulticueParam::set_has_min_dimension_val() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MulticueParam::clear_has_min_dimension_val() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MulticueParam::clear_min_dimension_val() {
  min_dimension_val_ = 0.2f;
  clear_has_min_dimension_val();
}
inline float MulticueParam::min_dimension_val() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.multicue.MulticueParam.min_dimension_val)
  return min_dimension_val_;
}
inline void MulticueParam::set_min_dimension_val(float value) {
  set_has_min_dimension_val();
  min_dimension_val_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.camera.multicue.MulticueParam.min_dimension_val)
}

// optional bool check_dimension = 2 [default = true];
inline bool MulticueParam::has_check_dimension() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MulticueParam::set_has_check_dimension() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MulticueParam::clear_has_check_dimension() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MulticueParam::clear_check_dimension() {
  check_dimension_ = true;
  clear_has_check_dimension();
}
inline bool MulticueParam::check_dimension() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.multicue.MulticueParam.check_dimension)
  return check_dimension_;
}
inline void MulticueParam::set_check_dimension(bool value) {
  set_has_check_dimension();
  check_dimension_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.camera.multicue.MulticueParam.check_dimension)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace multicue
}  // namespace camera
}  // namespace perception
}  // namespace apollo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_multicue_2eproto__INCLUDED
