// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_template_meta_schema.proto

#ifndef PROTOBUF_object_5ftemplate_5fmeta_5fschema_2eproto__INCLUDED
#define PROTOBUF_object_5ftemplate_5fmeta_5fschema_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace perception {
namespace camera {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_object_5ftemplate_5fmeta_5fschema_2eproto();
void protobuf_AssignDesc_object_5ftemplate_5fmeta_5fschema_2eproto();
void protobuf_ShutdownFile_object_5ftemplate_5fmeta_5fschema_2eproto();

class Dim;
class ObjectTemplate;
class ObjectTemplateMeta;

// ===================================================================

class Dim : public ::google::protobuf::Message {
 public:
  Dim();
  virtual ~Dim();

  Dim(const Dim& from);

  inline Dim& operator=(const Dim& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dim& default_instance();

  void Swap(Dim* other);

  // implements Message ----------------------------------------------

  Dim* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dim& from);
  void MergeFrom(const Dim& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float H = 1;
  inline bool has_h() const;
  inline void clear_h();
  static const int kHFieldNumber = 1;
  inline float h() const;
  inline void set_h(float value);

  // optional float W = 2;
  inline bool has_w() const;
  inline void clear_w();
  static const int kWFieldNumber = 2;
  inline float w() const;
  inline void set_w(float value);

  // optional float L = 3;
  inline bool has_l() const;
  inline void clear_l();
  static const int kLFieldNumber = 3;
  inline float l() const;
  inline void set_l(float value);

  // @@protoc_insertion_point(class_scope:apollo.perception.camera.Dim)
 private:
  inline void set_has_h();
  inline void clear_has_h();
  inline void set_has_w();
  inline void clear_has_w();
  inline void set_has_l();
  inline void clear_has_l();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float h_;
  float w_;
  float l_;
  friend void  protobuf_AddDesc_object_5ftemplate_5fmeta_5fschema_2eproto();
  friend void protobuf_AssignDesc_object_5ftemplate_5fmeta_5fschema_2eproto();
  friend void protobuf_ShutdownFile_object_5ftemplate_5fmeta_5fschema_2eproto();

  void InitAsDefaultInstance();
  static Dim* default_instance_;
};
// -------------------------------------------------------------------

class ObjectTemplate : public ::google::protobuf::Message {
 public:
  ObjectTemplate();
  virtual ~ObjectTemplate();

  ObjectTemplate(const ObjectTemplate& from);

  inline ObjectTemplate& operator=(const ObjectTemplate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectTemplate& default_instance();

  void Swap(ObjectTemplate* other);

  // implements Message ----------------------------------------------

  ObjectTemplate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectTemplate& from);
  void MergeFrom(const ObjectTemplate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float speed_limit = 1;
  inline bool has_speed_limit() const;
  inline void clear_speed_limit();
  static const int kSpeedLimitFieldNumber = 1;
  inline float speed_limit() const;
  inline void set_speed_limit(float value);

  // repeated .apollo.perception.camera.Dim dim = 2;
  inline int dim_size() const;
  inline void clear_dim();
  static const int kDimFieldNumber = 2;
  inline const ::apollo::perception::camera::Dim& dim(int index) const;
  inline ::apollo::perception::camera::Dim* mutable_dim(int index);
  inline ::apollo::perception::camera::Dim* add_dim();
  inline const ::google::protobuf::RepeatedPtrField< ::apollo::perception::camera::Dim >&
      dim() const;
  inline ::google::protobuf::RepeatedPtrField< ::apollo::perception::camera::Dim >*
      mutable_dim();

  // @@protoc_insertion_point(class_scope:apollo.perception.camera.ObjectTemplate)
 private:
  inline void set_has_speed_limit();
  inline void clear_has_speed_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::perception::camera::Dim > dim_;
  float speed_limit_;
  friend void  protobuf_AddDesc_object_5ftemplate_5fmeta_5fschema_2eproto();
  friend void protobuf_AssignDesc_object_5ftemplate_5fmeta_5fschema_2eproto();
  friend void protobuf_ShutdownFile_object_5ftemplate_5fmeta_5fschema_2eproto();

  void InitAsDefaultInstance();
  static ObjectTemplate* default_instance_;
};
// -------------------------------------------------------------------

class ObjectTemplateMeta : public ::google::protobuf::Message {
 public:
  ObjectTemplateMeta();
  virtual ~ObjectTemplateMeta();

  ObjectTemplateMeta(const ObjectTemplateMeta& from);

  inline ObjectTemplateMeta& operator=(const ObjectTemplateMeta& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectTemplateMeta& default_instance();

  void Swap(ObjectTemplateMeta* other);

  // implements Message ----------------------------------------------

  ObjectTemplateMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectTemplateMeta& from);
  void MergeFrom(const ObjectTemplateMeta& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .apollo.perception.camera.ObjectTemplate unknown = 1;
  inline bool has_unknown() const;
  inline void clear_unknown();
  static const int kUnknownFieldNumber = 1;
  inline const ::apollo::perception::camera::ObjectTemplate& unknown() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_unknown();
  inline ::apollo::perception::camera::ObjectTemplate* release_unknown();
  inline void set_allocated_unknown(::apollo::perception::camera::ObjectTemplate* unknown);

  // optional .apollo.perception.camera.ObjectTemplate unknown_movable = 2;
  inline bool has_unknown_movable() const;
  inline void clear_unknown_movable();
  static const int kUnknownMovableFieldNumber = 2;
  inline const ::apollo::perception::camera::ObjectTemplate& unknown_movable() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_unknown_movable();
  inline ::apollo::perception::camera::ObjectTemplate* release_unknown_movable();
  inline void set_allocated_unknown_movable(::apollo::perception::camera::ObjectTemplate* unknown_movable);

  // optional .apollo.perception.camera.ObjectTemplate unknown_unmovable = 3;
  inline bool has_unknown_unmovable() const;
  inline void clear_unknown_unmovable();
  static const int kUnknownUnmovableFieldNumber = 3;
  inline const ::apollo::perception::camera::ObjectTemplate& unknown_unmovable() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_unknown_unmovable();
  inline ::apollo::perception::camera::ObjectTemplate* release_unknown_unmovable();
  inline void set_allocated_unknown_unmovable(::apollo::perception::camera::ObjectTemplate* unknown_unmovable);

  // optional .apollo.perception.camera.ObjectTemplate car = 4;
  inline bool has_car() const;
  inline void clear_car();
  static const int kCarFieldNumber = 4;
  inline const ::apollo::perception::camera::ObjectTemplate& car() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_car();
  inline ::apollo::perception::camera::ObjectTemplate* release_car();
  inline void set_allocated_car(::apollo::perception::camera::ObjectTemplate* car);

  // optional .apollo.perception.camera.ObjectTemplate van = 5;
  inline bool has_van() const;
  inline void clear_van();
  static const int kVanFieldNumber = 5;
  inline const ::apollo::perception::camera::ObjectTemplate& van() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_van();
  inline ::apollo::perception::camera::ObjectTemplate* release_van();
  inline void set_allocated_van(::apollo::perception::camera::ObjectTemplate* van);

  // optional .apollo.perception.camera.ObjectTemplate truck = 6;
  inline bool has_truck() const;
  inline void clear_truck();
  static const int kTruckFieldNumber = 6;
  inline const ::apollo::perception::camera::ObjectTemplate& truck() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_truck();
  inline ::apollo::perception::camera::ObjectTemplate* release_truck();
  inline void set_allocated_truck(::apollo::perception::camera::ObjectTemplate* truck);

  // optional .apollo.perception.camera.ObjectTemplate bus = 7;
  inline bool has_bus() const;
  inline void clear_bus();
  static const int kBusFieldNumber = 7;
  inline const ::apollo::perception::camera::ObjectTemplate& bus() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_bus();
  inline ::apollo::perception::camera::ObjectTemplate* release_bus();
  inline void set_allocated_bus(::apollo::perception::camera::ObjectTemplate* bus);

  // optional .apollo.perception.camera.ObjectTemplate cyclist = 8;
  inline bool has_cyclist() const;
  inline void clear_cyclist();
  static const int kCyclistFieldNumber = 8;
  inline const ::apollo::perception::camera::ObjectTemplate& cyclist() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_cyclist();
  inline ::apollo::perception::camera::ObjectTemplate* release_cyclist();
  inline void set_allocated_cyclist(::apollo::perception::camera::ObjectTemplate* cyclist);

  // optional .apollo.perception.camera.ObjectTemplate motorcyclist = 9;
  inline bool has_motorcyclist() const;
  inline void clear_motorcyclist();
  static const int kMotorcyclistFieldNumber = 9;
  inline const ::apollo::perception::camera::ObjectTemplate& motorcyclist() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_motorcyclist();
  inline ::apollo::perception::camera::ObjectTemplate* release_motorcyclist();
  inline void set_allocated_motorcyclist(::apollo::perception::camera::ObjectTemplate* motorcyclist);

  // optional .apollo.perception.camera.ObjectTemplate tricyclist = 10;
  inline bool has_tricyclist() const;
  inline void clear_tricyclist();
  static const int kTricyclistFieldNumber = 10;
  inline const ::apollo::perception::camera::ObjectTemplate& tricyclist() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_tricyclist();
  inline ::apollo::perception::camera::ObjectTemplate* release_tricyclist();
  inline void set_allocated_tricyclist(::apollo::perception::camera::ObjectTemplate* tricyclist);

  // optional .apollo.perception.camera.ObjectTemplate pedestrian = 11;
  inline bool has_pedestrian() const;
  inline void clear_pedestrian();
  static const int kPedestrianFieldNumber = 11;
  inline const ::apollo::perception::camera::ObjectTemplate& pedestrian() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_pedestrian();
  inline ::apollo::perception::camera::ObjectTemplate* release_pedestrian();
  inline void set_allocated_pedestrian(::apollo::perception::camera::ObjectTemplate* pedestrian);

  // optional .apollo.perception.camera.ObjectTemplate trafficcone = 12;
  inline bool has_trafficcone() const;
  inline void clear_trafficcone();
  static const int kTrafficconeFieldNumber = 12;
  inline const ::apollo::perception::camera::ObjectTemplate& trafficcone() const;
  inline ::apollo::perception::camera::ObjectTemplate* mutable_trafficcone();
  inline ::apollo::perception::camera::ObjectTemplate* release_trafficcone();
  inline void set_allocated_trafficcone(::apollo::perception::camera::ObjectTemplate* trafficcone);

  // optional float max_dim_change_ratio = 21 [default = 0.1];
  inline bool has_max_dim_change_ratio() const;
  inline void clear_max_dim_change_ratio();
  static const int kMaxDimChangeRatioFieldNumber = 21;
  inline float max_dim_change_ratio() const;
  inline void set_max_dim_change_ratio(float value);

  // @@protoc_insertion_point(class_scope:apollo.perception.camera.ObjectTemplateMeta)
 private:
  inline void set_has_unknown();
  inline void clear_has_unknown();
  inline void set_has_unknown_movable();
  inline void clear_has_unknown_movable();
  inline void set_has_unknown_unmovable();
  inline void clear_has_unknown_unmovable();
  inline void set_has_car();
  inline void clear_has_car();
  inline void set_has_van();
  inline void clear_has_van();
  inline void set_has_truck();
  inline void clear_has_truck();
  inline void set_has_bus();
  inline void clear_has_bus();
  inline void set_has_cyclist();
  inline void clear_has_cyclist();
  inline void set_has_motorcyclist();
  inline void clear_has_motorcyclist();
  inline void set_has_tricyclist();
  inline void clear_has_tricyclist();
  inline void set_has_pedestrian();
  inline void clear_has_pedestrian();
  inline void set_has_trafficcone();
  inline void clear_has_trafficcone();
  inline void set_has_max_dim_change_ratio();
  inline void clear_has_max_dim_change_ratio();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::apollo::perception::camera::ObjectTemplate* unknown_;
  ::apollo::perception::camera::ObjectTemplate* unknown_movable_;
  ::apollo::perception::camera::ObjectTemplate* unknown_unmovable_;
  ::apollo::perception::camera::ObjectTemplate* car_;
  ::apollo::perception::camera::ObjectTemplate* van_;
  ::apollo::perception::camera::ObjectTemplate* truck_;
  ::apollo::perception::camera::ObjectTemplate* bus_;
  ::apollo::perception::camera::ObjectTemplate* cyclist_;
  ::apollo::perception::camera::ObjectTemplate* motorcyclist_;
  ::apollo::perception::camera::ObjectTemplate* tricyclist_;
  ::apollo::perception::camera::ObjectTemplate* pedestrian_;
  ::apollo::perception::camera::ObjectTemplate* trafficcone_;
  float max_dim_change_ratio_;
  friend void  protobuf_AddDesc_object_5ftemplate_5fmeta_5fschema_2eproto();
  friend void protobuf_AssignDesc_object_5ftemplate_5fmeta_5fschema_2eproto();
  friend void protobuf_ShutdownFile_object_5ftemplate_5fmeta_5fschema_2eproto();

  void InitAsDefaultInstance();
  static ObjectTemplateMeta* default_instance_;
};
// ===================================================================


// ===================================================================

// Dim

// optional float H = 1;
inline bool Dim::has_h() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dim::set_has_h() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dim::clear_has_h() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dim::clear_h() {
  h_ = 0;
  clear_has_h();
}
inline float Dim::h() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.Dim.H)
  return h_;
}
inline void Dim::set_h(float value) {
  set_has_h();
  h_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.camera.Dim.H)
}

// optional float W = 2;
inline bool Dim::has_w() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dim::set_has_w() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dim::clear_has_w() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dim::clear_w() {
  w_ = 0;
  clear_has_w();
}
inline float Dim::w() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.Dim.W)
  return w_;
}
inline void Dim::set_w(float value) {
  set_has_w();
  w_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.camera.Dim.W)
}

// optional float L = 3;
inline bool Dim::has_l() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Dim::set_has_l() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Dim::clear_has_l() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Dim::clear_l() {
  l_ = 0;
  clear_has_l();
}
inline float Dim::l() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.Dim.L)
  return l_;
}
inline void Dim::set_l(float value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.camera.Dim.L)
}

// -------------------------------------------------------------------

// ObjectTemplate

// optional float speed_limit = 1;
inline bool ObjectTemplate::has_speed_limit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectTemplate::set_has_speed_limit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectTemplate::clear_has_speed_limit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectTemplate::clear_speed_limit() {
  speed_limit_ = 0;
  clear_has_speed_limit();
}
inline float ObjectTemplate::speed_limit() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplate.speed_limit)
  return speed_limit_;
}
inline void ObjectTemplate::set_speed_limit(float value) {
  set_has_speed_limit();
  speed_limit_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.camera.ObjectTemplate.speed_limit)
}

// repeated .apollo.perception.camera.Dim dim = 2;
inline int ObjectTemplate::dim_size() const {
  return dim_.size();
}
inline void ObjectTemplate::clear_dim() {
  dim_.Clear();
}
inline const ::apollo::perception::camera::Dim& ObjectTemplate::dim(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplate.dim)
  return dim_.Get(index);
}
inline ::apollo::perception::camera::Dim* ObjectTemplate::mutable_dim(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplate.dim)
  return dim_.Mutable(index);
}
inline ::apollo::perception::camera::Dim* ObjectTemplate::add_dim() {
  // @@protoc_insertion_point(field_add:apollo.perception.camera.ObjectTemplate.dim)
  return dim_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::perception::camera::Dim >&
ObjectTemplate::dim() const {
  // @@protoc_insertion_point(field_list:apollo.perception.camera.ObjectTemplate.dim)
  return dim_;
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::perception::camera::Dim >*
ObjectTemplate::mutable_dim() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.camera.ObjectTemplate.dim)
  return &dim_;
}

// -------------------------------------------------------------------

// ObjectTemplateMeta

// optional .apollo.perception.camera.ObjectTemplate unknown = 1;
inline bool ObjectTemplateMeta::has_unknown() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectTemplateMeta::set_has_unknown() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectTemplateMeta::clear_has_unknown() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectTemplateMeta::clear_unknown() {
  if (unknown_ != NULL) unknown_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_unknown();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::unknown() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.unknown)
  return unknown_ != NULL ? *unknown_ : *default_instance_->unknown_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_unknown() {
  set_has_unknown();
  if (unknown_ == NULL) unknown_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.unknown)
  return unknown_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_unknown() {
  clear_has_unknown();
  ::apollo::perception::camera::ObjectTemplate* temp = unknown_;
  unknown_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_unknown(::apollo::perception::camera::ObjectTemplate* unknown) {
  delete unknown_;
  unknown_ = unknown;
  if (unknown) {
    set_has_unknown();
  } else {
    clear_has_unknown();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.unknown)
}

// optional .apollo.perception.camera.ObjectTemplate unknown_movable = 2;
inline bool ObjectTemplateMeta::has_unknown_movable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectTemplateMeta::set_has_unknown_movable() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectTemplateMeta::clear_has_unknown_movable() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjectTemplateMeta::clear_unknown_movable() {
  if (unknown_movable_ != NULL) unknown_movable_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_unknown_movable();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::unknown_movable() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.unknown_movable)
  return unknown_movable_ != NULL ? *unknown_movable_ : *default_instance_->unknown_movable_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_unknown_movable() {
  set_has_unknown_movable();
  if (unknown_movable_ == NULL) unknown_movable_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.unknown_movable)
  return unknown_movable_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_unknown_movable() {
  clear_has_unknown_movable();
  ::apollo::perception::camera::ObjectTemplate* temp = unknown_movable_;
  unknown_movable_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_unknown_movable(::apollo::perception::camera::ObjectTemplate* unknown_movable) {
  delete unknown_movable_;
  unknown_movable_ = unknown_movable;
  if (unknown_movable) {
    set_has_unknown_movable();
  } else {
    clear_has_unknown_movable();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.unknown_movable)
}

// optional .apollo.perception.camera.ObjectTemplate unknown_unmovable = 3;
inline bool ObjectTemplateMeta::has_unknown_unmovable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectTemplateMeta::set_has_unknown_unmovable() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ObjectTemplateMeta::clear_has_unknown_unmovable() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ObjectTemplateMeta::clear_unknown_unmovable() {
  if (unknown_unmovable_ != NULL) unknown_unmovable_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_unknown_unmovable();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::unknown_unmovable() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.unknown_unmovable)
  return unknown_unmovable_ != NULL ? *unknown_unmovable_ : *default_instance_->unknown_unmovable_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_unknown_unmovable() {
  set_has_unknown_unmovable();
  if (unknown_unmovable_ == NULL) unknown_unmovable_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.unknown_unmovable)
  return unknown_unmovable_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_unknown_unmovable() {
  clear_has_unknown_unmovable();
  ::apollo::perception::camera::ObjectTemplate* temp = unknown_unmovable_;
  unknown_unmovable_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_unknown_unmovable(::apollo::perception::camera::ObjectTemplate* unknown_unmovable) {
  delete unknown_unmovable_;
  unknown_unmovable_ = unknown_unmovable;
  if (unknown_unmovable) {
    set_has_unknown_unmovable();
  } else {
    clear_has_unknown_unmovable();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.unknown_unmovable)
}

// optional .apollo.perception.camera.ObjectTemplate car = 4;
inline bool ObjectTemplateMeta::has_car() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ObjectTemplateMeta::set_has_car() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ObjectTemplateMeta::clear_has_car() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ObjectTemplateMeta::clear_car() {
  if (car_ != NULL) car_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_car();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::car() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.car)
  return car_ != NULL ? *car_ : *default_instance_->car_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_car() {
  set_has_car();
  if (car_ == NULL) car_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.car)
  return car_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_car() {
  clear_has_car();
  ::apollo::perception::camera::ObjectTemplate* temp = car_;
  car_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_car(::apollo::perception::camera::ObjectTemplate* car) {
  delete car_;
  car_ = car;
  if (car) {
    set_has_car();
  } else {
    clear_has_car();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.car)
}

// optional .apollo.perception.camera.ObjectTemplate van = 5;
inline bool ObjectTemplateMeta::has_van() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ObjectTemplateMeta::set_has_van() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ObjectTemplateMeta::clear_has_van() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ObjectTemplateMeta::clear_van() {
  if (van_ != NULL) van_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_van();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::van() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.van)
  return van_ != NULL ? *van_ : *default_instance_->van_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_van() {
  set_has_van();
  if (van_ == NULL) van_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.van)
  return van_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_van() {
  clear_has_van();
  ::apollo::perception::camera::ObjectTemplate* temp = van_;
  van_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_van(::apollo::perception::camera::ObjectTemplate* van) {
  delete van_;
  van_ = van;
  if (van) {
    set_has_van();
  } else {
    clear_has_van();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.van)
}

// optional .apollo.perception.camera.ObjectTemplate truck = 6;
inline bool ObjectTemplateMeta::has_truck() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ObjectTemplateMeta::set_has_truck() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ObjectTemplateMeta::clear_has_truck() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ObjectTemplateMeta::clear_truck() {
  if (truck_ != NULL) truck_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_truck();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::truck() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.truck)
  return truck_ != NULL ? *truck_ : *default_instance_->truck_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_truck() {
  set_has_truck();
  if (truck_ == NULL) truck_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.truck)
  return truck_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_truck() {
  clear_has_truck();
  ::apollo::perception::camera::ObjectTemplate* temp = truck_;
  truck_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_truck(::apollo::perception::camera::ObjectTemplate* truck) {
  delete truck_;
  truck_ = truck;
  if (truck) {
    set_has_truck();
  } else {
    clear_has_truck();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.truck)
}

// optional .apollo.perception.camera.ObjectTemplate bus = 7;
inline bool ObjectTemplateMeta::has_bus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ObjectTemplateMeta::set_has_bus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ObjectTemplateMeta::clear_has_bus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ObjectTemplateMeta::clear_bus() {
  if (bus_ != NULL) bus_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_bus();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::bus() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.bus)
  return bus_ != NULL ? *bus_ : *default_instance_->bus_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_bus() {
  set_has_bus();
  if (bus_ == NULL) bus_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.bus)
  return bus_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_bus() {
  clear_has_bus();
  ::apollo::perception::camera::ObjectTemplate* temp = bus_;
  bus_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_bus(::apollo::perception::camera::ObjectTemplate* bus) {
  delete bus_;
  bus_ = bus;
  if (bus) {
    set_has_bus();
  } else {
    clear_has_bus();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.bus)
}

// optional .apollo.perception.camera.ObjectTemplate cyclist = 8;
inline bool ObjectTemplateMeta::has_cyclist() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ObjectTemplateMeta::set_has_cyclist() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ObjectTemplateMeta::clear_has_cyclist() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ObjectTemplateMeta::clear_cyclist() {
  if (cyclist_ != NULL) cyclist_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_cyclist();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::cyclist() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.cyclist)
  return cyclist_ != NULL ? *cyclist_ : *default_instance_->cyclist_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_cyclist() {
  set_has_cyclist();
  if (cyclist_ == NULL) cyclist_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.cyclist)
  return cyclist_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_cyclist() {
  clear_has_cyclist();
  ::apollo::perception::camera::ObjectTemplate* temp = cyclist_;
  cyclist_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_cyclist(::apollo::perception::camera::ObjectTemplate* cyclist) {
  delete cyclist_;
  cyclist_ = cyclist;
  if (cyclist) {
    set_has_cyclist();
  } else {
    clear_has_cyclist();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.cyclist)
}

// optional .apollo.perception.camera.ObjectTemplate motorcyclist = 9;
inline bool ObjectTemplateMeta::has_motorcyclist() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ObjectTemplateMeta::set_has_motorcyclist() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ObjectTemplateMeta::clear_has_motorcyclist() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ObjectTemplateMeta::clear_motorcyclist() {
  if (motorcyclist_ != NULL) motorcyclist_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_motorcyclist();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::motorcyclist() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.motorcyclist)
  return motorcyclist_ != NULL ? *motorcyclist_ : *default_instance_->motorcyclist_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_motorcyclist() {
  set_has_motorcyclist();
  if (motorcyclist_ == NULL) motorcyclist_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.motorcyclist)
  return motorcyclist_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_motorcyclist() {
  clear_has_motorcyclist();
  ::apollo::perception::camera::ObjectTemplate* temp = motorcyclist_;
  motorcyclist_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_motorcyclist(::apollo::perception::camera::ObjectTemplate* motorcyclist) {
  delete motorcyclist_;
  motorcyclist_ = motorcyclist;
  if (motorcyclist) {
    set_has_motorcyclist();
  } else {
    clear_has_motorcyclist();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.motorcyclist)
}

// optional .apollo.perception.camera.ObjectTemplate tricyclist = 10;
inline bool ObjectTemplateMeta::has_tricyclist() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ObjectTemplateMeta::set_has_tricyclist() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ObjectTemplateMeta::clear_has_tricyclist() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ObjectTemplateMeta::clear_tricyclist() {
  if (tricyclist_ != NULL) tricyclist_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_tricyclist();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::tricyclist() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.tricyclist)
  return tricyclist_ != NULL ? *tricyclist_ : *default_instance_->tricyclist_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_tricyclist() {
  set_has_tricyclist();
  if (tricyclist_ == NULL) tricyclist_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.tricyclist)
  return tricyclist_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_tricyclist() {
  clear_has_tricyclist();
  ::apollo::perception::camera::ObjectTemplate* temp = tricyclist_;
  tricyclist_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_tricyclist(::apollo::perception::camera::ObjectTemplate* tricyclist) {
  delete tricyclist_;
  tricyclist_ = tricyclist;
  if (tricyclist) {
    set_has_tricyclist();
  } else {
    clear_has_tricyclist();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.tricyclist)
}

// optional .apollo.perception.camera.ObjectTemplate pedestrian = 11;
inline bool ObjectTemplateMeta::has_pedestrian() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ObjectTemplateMeta::set_has_pedestrian() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ObjectTemplateMeta::clear_has_pedestrian() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ObjectTemplateMeta::clear_pedestrian() {
  if (pedestrian_ != NULL) pedestrian_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_pedestrian();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::pedestrian() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.pedestrian)
  return pedestrian_ != NULL ? *pedestrian_ : *default_instance_->pedestrian_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_pedestrian() {
  set_has_pedestrian();
  if (pedestrian_ == NULL) pedestrian_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.pedestrian)
  return pedestrian_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_pedestrian() {
  clear_has_pedestrian();
  ::apollo::perception::camera::ObjectTemplate* temp = pedestrian_;
  pedestrian_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_pedestrian(::apollo::perception::camera::ObjectTemplate* pedestrian) {
  delete pedestrian_;
  pedestrian_ = pedestrian;
  if (pedestrian) {
    set_has_pedestrian();
  } else {
    clear_has_pedestrian();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.pedestrian)
}

// optional .apollo.perception.camera.ObjectTemplate trafficcone = 12;
inline bool ObjectTemplateMeta::has_trafficcone() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ObjectTemplateMeta::set_has_trafficcone() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ObjectTemplateMeta::clear_has_trafficcone() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ObjectTemplateMeta::clear_trafficcone() {
  if (trafficcone_ != NULL) trafficcone_->::apollo::perception::camera::ObjectTemplate::Clear();
  clear_has_trafficcone();
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::trafficcone() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.trafficcone)
  return trafficcone_ != NULL ? *trafficcone_ : *default_instance_->trafficcone_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_trafficcone() {
  set_has_trafficcone();
  if (trafficcone_ == NULL) trafficcone_ = new ::apollo::perception::camera::ObjectTemplate;
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.trafficcone)
  return trafficcone_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_trafficcone() {
  clear_has_trafficcone();
  ::apollo::perception::camera::ObjectTemplate* temp = trafficcone_;
  trafficcone_ = NULL;
  return temp;
}
inline void ObjectTemplateMeta::set_allocated_trafficcone(::apollo::perception::camera::ObjectTemplate* trafficcone) {
  delete trafficcone_;
  trafficcone_ = trafficcone;
  if (trafficcone) {
    set_has_trafficcone();
  } else {
    clear_has_trafficcone();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.trafficcone)
}

// optional float max_dim_change_ratio = 21 [default = 0.1];
inline bool ObjectTemplateMeta::has_max_dim_change_ratio() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ObjectTemplateMeta::set_has_max_dim_change_ratio() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ObjectTemplateMeta::clear_has_max_dim_change_ratio() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ObjectTemplateMeta::clear_max_dim_change_ratio() {
  max_dim_change_ratio_ = 0.1f;
  clear_has_max_dim_change_ratio();
}
inline float ObjectTemplateMeta::max_dim_change_ratio() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.max_dim_change_ratio)
  return max_dim_change_ratio_;
}
inline void ObjectTemplateMeta::set_max_dim_change_ratio(float value) {
  set_has_max_dim_change_ratio();
  max_dim_change_ratio_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.camera.ObjectTemplateMeta.max_dim_change_ratio)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace camera
}  // namespace perception
}  // namespace apollo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_object_5ftemplate_5fmeta_5fschema_2eproto__INCLUDED
